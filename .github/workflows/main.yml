permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

on: 
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  SA_ID: ajembo0u4edhicrigid1
  FUNCTION_ID: d4eu1mlfscm16b7lags9
  FUNCTION_RUNTIME: nodejs18
  FUNCTION_ENTRYPOINT: index.handler
  FUNCTION_MEMORY: 269484032
  
jobs:
  function_version_deployment_job:
    runs-on: ubuntu-latest
    name: Function redeployment job
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      # Package everythiung to zip
      - name: Zip the code
        run: |
          zip function.zip ./*.js ./*.json
      - name: Install dependencies
        run: npm ci
      - run: npm run build --if-present
      - name: Install OIDC Client from Core Package
        run: npm install @actions/core @actions/http-client
      # Getting the workflow task token
      - name: Get Id Token
        uses: actions/github-script@v7
        id: tokenid
        with:
          script: |
            const coredemo = require('@actions/core')
            let id_token = await coredemo.getIDToken()
            coredemo.setOutput('id_token', id_token)
            console.log(context)
            
      # Exchanging the workflow task token for an IAM token of a service account in Yandex Cloud
      - name: GetIAMToken
        run: |
          
          IAMTOKEN=$(curl -sH "Content-Type: application/x-www-form-urlencoded" -d "grant_type=urn:ietf:params:oauth:grant-type:token-exchange&requested_token_type=urn:ietf:params:oauth:token-type:access_token&audience=${{env.SA_ID}}&subject_token=${{steps.tokenid.outputs.id_token}}&subject_token_type=urn:ietf:params:oauth:token-type:id_token" -X POST https://auth.yandex.cloud/oauth/token | jq -r '.access_token')
          echo "IAMToken=${IAMTOKEN}" >> $GITHUB_OUTPUT
        id: IAMtoken

      # Requesting list of functions via the API using an IAM token in Yandex Cloud
      - name: Trigger function redeployment step
        id: Redeployment
        run: |
          FILE_BYTES=$(cat ./function.zip | base64)
                    
          DEPLOYMENT_RESULT=$(curl -X POST -sH "Authorization: Bearer ${{steps.IAMtoken.outputs.IAMTOKEN}}" https://serverless-functions.api.cloud.yandex.net/functions/v1/versions \
            -d @- << EOF 
          { 
            "functionId": "${{env.FUNCTION_ID}}",
            "runtime": "${{env.FUNCTION_RUNTIME}}",
            "entrypoint": "${{env.FUNCTION_ENTRYPOINT}}", 
            "resources": { 
              "memory": "${{env.FUNCTION_MEMORY}}"
            },
            "executionTimeout": "3s", 
            "content": '${FILE_BYTES}'
          }
          EOF
          )
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "text<<$EOF" >> $GITHUB_ENV
          echo "DeploymentResult=${DEPLOYMENT_RESULT}" >> $GITHUB_ENV
          echo "$EOF" >> $GITHUB_ENV
      - name: Echo the result
        id: Echo
        run: |
          echo "${{steps.Redeployment.outputs.DeploymentResult}}"
      - name: Check the result
        if: ${{steps.Redeployment.outputs.DeploymentResult.code}} != null
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('${{steps.Redeployment.outputs.DeploymentResult.message}}')
